[main] INFO soot.jimple.infoflow.taintWrappers.EasyTaintWrapper - Loaded wrapper entries for 52 classes and 4 exclusions.
[main] INFO soot.jimple.infoflow.Infoflow - Resetting Soot...
Warning: java.lang.NoClassDefFoundError is a phantom class!
Warning: java.lang.StringBuffer is a phantom class!
Warning: java.lang.Boolean is a phantom class!
Warning: java.lang.Long is a phantom class!
Warning: java.lang.Integer is a phantom class!
Warning: java.lang.Short is a phantom class!
Warning: java.lang.Float is a phantom class!
Warning: java.lang.Double is a phantom class!
Warning: java.lang.Throwable is a phantom class!
Warning: java.lang.Class is a phantom class!
Warning: java.lang.Character is a phantom class!
Warning: java.lang.AssertionError is a phantom class!
Warning: java.lang.Byte is a phantom class!
Warning: java.lang.Void is a phantom class!
Warning: java.lang.ClassFormatError is a phantom class!
Warning: java.lang.InstantiationError is a phantom class!
Warning: java.lang.Runnable is a phantom class!
Warning: java.lang.ref.Finalizer is a phantom class!
Warning: java.lang.IncompatibleClassChangeError is a phantom class!
Warning: java.lang.NoSuchFieldError is a phantom class!
Warning: java.lang.StackOverflowError is a phantom class!
Warning: java.lang.Thread is a phantom class!
Warning: java.lang.IllegalAccessError is a phantom class!
Warning: java.lang.ArrayStoreException is a phantom class!
Warning: java.lang.NoSuchMethodError is a phantom class!
Warning: java.lang.LinkageError is a phantom class!
Warning: java.lang.ExceptionInInitializerError is a phantom class!
Warning: java.lang.InternalError is a phantom class!
Warning: java.lang.VerifyError is a phantom class!
Warning: java.io.Serializable is a phantom class!
Warning: java.lang.ArrayIndexOutOfBoundsException is a phantom class!
Warning: java.lang.ClassCastException is a phantom class!
Warning: java.lang.ArithmeticException is a phantom class!
Warning: java.lang.IndexOutOfBoundsException is a phantom class!
Warning: java.lang.AbstractMethodError is a phantom class!
Warning: java.lang.Object is a phantom class!
Warning: java.lang.ThreadDeath is a phantom class!
Warning: java.lang.String is a phantom class!
Warning: java.lang.UnknownError is a phantom class!
Warning: java.lang.ClassCircularityError is a phantom class!
Warning: java.lang.Cloneable is a phantom class!
Warning: java.lang.NegativeArraySizeException is a phantom class!
Warning: java.lang.UnsatisfiedLinkError is a phantom class!
Warning: java.lang.Error is a phantom class!
Warning: java.lang.OutOfMemoryError is a phantom class!
Warning: java.lang.IllegalMonitorStateException is a phantom class!
Warning: java.lang.RuntimeException is a phantom class!
Warning: java.lang.NullPointerException is a phantom class!
Warning: java.lang.ClassNotFoundException is a phantom class!
[main] INFO soot.jimple.infoflow.Infoflow - Basic class loading done.
Warning: java.io.InputStream is a phantom class!
Warning: java.io.BufferedReader is a phantom class!
Warning: java.lang.NumberFormatException is a phantom class!
Warning: java.io.InputStreamReader is a phantom class!
Warning: java.io.PrintStream is a phantom class!
Warning: java.lang.System is a phantom class!
Warning: java.io.Reader is a phantom class!
Warning: java.io.IOException is a phantom class!
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
[main] INFO soot.jimple.infoflow.Infoflow - Callgraph has 7 edges
[main] INFO soot.jimple.infoflow.Infoflow - Looking for sources and sinks...
@Suresh : <soot.jimple.infoflow.test.Test1: void main(java.lang.String[])>
@Suresh : <soot.jimple.infoflow.test.Test1: void <init>()>
@Suresh : <soot.jimple.infoflow.test.Test1: void work()>
[main] INFO soot.jimple.infoflow.Infoflow - Source lookup done, found 3 sources and 3 sinks.
[main] INFO soot.jimple.infoflow.Infoflow - Taint wrapper hits: 0
[main] INFO soot.jimple.infoflow.Infoflow - Taint wrapper misses: 0
[main] INFO soot.jimple.infoflow.Infoflow - IFDS problem with 108 forward and 0 backward edges solved, processing results...
[main] INFO soot.jimple.infoflow.data.pathBuilders.SemiThreadedPathBuilder - Obtainted 3 connections between sources and sinks
[main] INFO soot.jimple.infoflow.data.pathBuilders.SemiThreadedPathBuilder - Building path 1
[main] INFO soot.jimple.infoflow.data.pathBuilders.SemiThreadedPathBuilder - Building path 2
[main] INFO soot.jimple.infoflow.data.pathBuilders.SemiThreadedPathBuilder - Building path 3
[main] INFO soot.jimple.infoflow.data.pathBuilders.SemiThreadedPathBuilder - Path processing took 0.009081843 seconds in total for 10 edges
[main] INFO soot.jimple.infoflow.data.pathBuilders.SemiThreadedPathBuilder - Running path extension on 2 roots
[main] INFO soot.jimple.infoflow.data.pathBuilders.SemiThreadedPathBuilder - Path extension took 0.016316299 seconds.
[main] INFO soot.jimple.infoflow.data.pathBuilders.SemiThreadedPathBuilder - Path proecssing took 0.0202859 seconds in total
[main] INFO soot.jimple.infoflow.Infoflow - The sink virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>(st) in method <soot.jimple.infoflow.test.Test1: void work()> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.Infoflow - - s = virtualinvoke is.<java.io.BufferedReader: java.lang.String readLine()>() in method <soot.jimple.infoflow.test.Test1: void work()>
[main] INFO soot.jimple.infoflow.Infoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.Infoflow - 	 -> <soot.jimple.infoflow.test.Test1: void work()>
[main] INFO soot.jimple.infoflow.Infoflow - 		 -> s = virtualinvoke is.<java.io.BufferedReader: java.lang.String readLine()>()
[main] INFO soot.jimple.infoflow.Infoflow - 	 -> <soot.jimple.infoflow.test.Test1: void work()>
[main] INFO soot.jimple.infoflow.Infoflow - 		 -> st = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(1, 61)
[main] INFO soot.jimple.infoflow.Infoflow - 	 -> <soot.jimple.infoflow.test.Test1: void work()>
[main] INFO soot.jimple.infoflow.Infoflow - 		 -> virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>(st)
[main] INFO soot.jimple.infoflow.Infoflow - 	 -> <soot.jimple.infoflow.test.Test1: void work()>
[main] INFO soot.jimple.infoflow.Infoflow - 		 -> virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>(st)
[main] INFO soot.jimple.infoflow.Infoflow - The sink virtualinvoke $r5.<java.io.PrintStream: void println(int)>(y) in method <soot.jimple.infoflow.test.Test1: void work()> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.Infoflow - - $r4 = virtualinvoke is.<java.io.BufferedReader: java.lang.String readLine()>() in method <soot.jimple.infoflow.test.Test1: void work()>
[main] INFO soot.jimple.infoflow.Infoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.Infoflow - 	 -> <soot.jimple.infoflow.test.Test1: void work()>
[main] INFO soot.jimple.infoflow.Infoflow - 		 -> $r4 = virtualinvoke is.<java.io.BufferedReader: java.lang.String readLine()>()
[main] INFO soot.jimple.infoflow.Infoflow - 	 -> <soot.jimple.infoflow.test.Test1: void work()>
[main] INFO soot.jimple.infoflow.Infoflow - 		 -> specialinvoke $r3.<java.lang.String: void <init>(java.lang.String)>($r4)
[main] INFO soot.jimple.infoflow.Infoflow - 	 -> <soot.jimple.infoflow.test.Test1: void work()>
[main] INFO soot.jimple.infoflow.Infoflow - 		 -> x = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3)
[main] INFO soot.jimple.infoflow.Infoflow - 	 -> <soot.jimple.infoflow.test.Test1: void work()>
[main] INFO soot.jimple.infoflow.Infoflow - 		 -> y = x
[main] INFO soot.jimple.infoflow.Infoflow - 	 -> <soot.jimple.infoflow.test.Test1: void work()>
[main] INFO soot.jimple.infoflow.Infoflow - 		 -> virtualinvoke $r5.<java.io.PrintStream: void println(int)>(y)
[main] INFO soot.jimple.infoflow.Infoflow - 	 -> <soot.jimple.infoflow.test.Test1: void work()>
[main] INFO soot.jimple.infoflow.Infoflow - 		 -> virtualinvoke $r5.<java.io.PrintStream: void println(int)>(y)
[main] INFO soot.jimple.infoflow.Infoflow - The sink virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(s) in method <soot.jimple.infoflow.test.Test1: void work()> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.Infoflow - - s = virtualinvoke is.<java.io.BufferedReader: java.lang.String readLine()>() in method <soot.jimple.infoflow.test.Test1: void work()>
[main] INFO soot.jimple.infoflow.Infoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.Infoflow - 	 -> <soot.jimple.infoflow.test.Test1: void work()>
[main] INFO soot.jimple.infoflow.Infoflow - 		 -> s = virtualinvoke is.<java.io.BufferedReader: java.lang.String readLine()>()
[main] INFO soot.jimple.infoflow.Infoflow - 	 -> <soot.jimple.infoflow.test.Test1: void work()>
[main] INFO soot.jimple.infoflow.Infoflow - 		 -> virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(s)
[main] INFO soot.jimple.infoflow.Infoflow - 	 -> <soot.jimple.infoflow.test.Test1: void work()>
[main] INFO soot.jimple.infoflow.Infoflow - 		 -> virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(s)
{<soot.jimple.infoflow.test.Test1: void work()>=[this := @this: soot.jimple.infoflow.test.Test1, $r0 = new java.io.BufferedReader, $r1 = new java.io.InputStreamReader, $r2 = <java.lang.System: java.io.InputStream in>, specialinvoke $r1.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r2), specialinvoke $r0.<java.io.BufferedReader: void <init>(java.io.Reader)>($r1), is = $r0, $r3 = new java.lang.String, $r4 = virtualinvoke is.<java.io.BufferedReader: java.lang.String readLine()>(), specialinvoke $r3.<java.lang.String: void <init>(java.lang.String)>($r4), x = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3), y = x, $r5 = <java.lang.System: java.io.PrintStream out>, virtualinvoke $r5.<java.io.PrintStream: void println(int)>(y), s = virtualinvoke is.<java.io.BufferedReader: java.lang.String readLine()>(), s1 = "Aritra Dhar", $r6 = <java.lang.System: java.io.PrintStream out>, virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(s), st = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(1, 61), $r7 = <java.lang.System: java.io.PrintStream out>, virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>(st), goto [?= return], $r9 := @caughtexception, y#2 = $r9, virtualinvoke y#2.<java.lang.NumberFormatException: void printStackTrace()>(), goto [?= return], $r8 := @caughtexception, y#3 = $r8, virtualinvoke y#3.<java.io.IOException: void printStackTrace()>(), return], <soot.jimple.infoflow.test.Test1: void <init>()>=[this := @this: soot.jimple.infoflow.test.Test1, specialinvoke this.<java.lang.Object: void <init>()>(), return], <soot.jimple.infoflow.test.Test1: void main(java.lang.String[])>=[args := @parameter0: java.lang.String[], $r0 = new soot.jimple.infoflow.test.Test1, specialinvoke $r0.<soot.jimple.infoflow.test.Test1: void <init>()>(), virtualinvoke $r0.<soot.jimple.infoflow.test.Test1: void work()>(), return]}
